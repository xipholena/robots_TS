{"version":3,"sources":["components/Header.tsx","components/Book.tsx","containers/App.tsx","reportWebVitals.ts","index.tsx"],"names":["Header","className","Book","phones","console","log","map","phone","id","App","useState","setPhones","getPhonesHandler","a","fetch","then","result","json","data","useEffect","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mPAaeA,EAXI,WACf,OACI,qBAAKC,UAAU,YAAf,SACI,yBAAQA,UAAU,SAAlB,UACI,qCACA,wBAAQA,UAAU,mBAAlB,2BCyBDC,EAbF,SAAC,GAA6C,IAA5CC,EAA2C,EAA3CA,OAEX,OADAC,QAAQC,IAAI,cAAeF,GAEvB,sBAAMF,UAAU,OAAhB,SACI,6BACKE,EAAOG,KAAK,SAACC,GACDA,EAAMC,WCcpBC,EA9BC,WACZ,MAA4BC,mBAA6B,IAAzD,mBAAOP,EAAP,KAAeQ,EAAf,KAEMC,EAAgB,uCAAG,4BAAAC,EAAA,+EAECC,MAAM,qCACpBC,MAAK,SAAAC,GAAM,OAAIA,EAAOC,UACtBF,MAAK,SAAAG,GAAI,OAAIP,EAAUO,EAAKf,WAJf,cAEZe,EAFY,yBAKVA,GALU,gCAOjBd,QAAQC,IAAI,QAAZ,MAPiB,yDAAH,qDAkBtB,OARAc,qBAAU,WACNP,OAGJO,qBAAU,WACNf,QAAQC,IAAIF,KACd,CAACA,IAGH,gCACE,cAAC,EAAD,IACA,cAAC,EAAD,CAAMA,OAAQA,QCnBLiB,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBP,MAAK,YAAkD,IAA/CQ,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCHdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.20c5f145.chunk.js","sourcesContent":["import React, {FC} from 'react';\n\nconst Header: FC = () => {\n    return (\n        <div className=\"container\">\n            <header className=\"header\">\n                <p>Logo</p>\n                <button className=\"header__log-link\">Sign in</button>\n            </header>\n        </div>\n    )\n}\n\nexport default Header;","import React, {FC} from 'react';\n\ninterface IName {\n    first: string,\n    last: string\n}\n\nexport interface IPerson {\n    id: string,\n    isActive: boolean,\n    age: number,\n    name: IName,\n    company: string,\n    email: string,\n    phone: string,\n    address: string,\n    registered: string\n}\n// @ts-ignore\nconst Book = ({phones}/*:{ phones: Array<IPerson> }*/) => {\n    console.log('Render Book', phones)\n    return (\n        <main className=\"main\">\n            <ul>\n                {phones.map( (phone: IPerson) => {\n                    <li key={phone.id}></li>\n                })}\n            </ul>\n        </main>\n    )\n}\n\nexport default Book;","import React, {useState, useEffect, FC} from 'react';\n\nimport './App.css';\n\nimport Header from '../components/Header';\nimport Book from '../components/Book';\nimport {IPerson} from \"../components/Book\";\n\n\nconst App: FC = () => {\n    const [phones, setPhones] = useState/*<Array<IPerson>>*/([]);\n\n    const getPhonesHandler = async () => {\n        try {\n           const data = await fetch('http://localhost:3000/phones.json') //: Promise<Array<IPerson> | undefined>\n               .then(result => result.json /*<{data: Array<IPerson>}>*/ ())\n               .then(data => setPhones(data.phones))\n            return data\n        } catch (e) {\n            console.log('error', e)\n        }\n    }\n    useEffect(() => {\n        getPhonesHandler()\n    })\n\n    useEffect(() => {\n        console.log(phones)\n    },[phones])\n\n    return (\n    <div>\n      <Header/>\n      <Book phones={phones}/>\n    </div>\n    );\n\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}